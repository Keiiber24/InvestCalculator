Integrate the Binance API into my project to automatically fetch and update the "Lasted Price" column. This column should be populated with real-time prices from Binance and displayed in the "Trades by Market" table.

Steps to follow:
Install the required package:
Install the python-binance library to enable interaction with Binance's API.

API Key Setup:
Ensure that the Binance API Key and API Secret are securely stored as environment variables for safe use. Use these credentials to authenticate the API requests.

Connect to the Binance API:
Establish a connection to the Binance API using the API Key and API Secret. This will allow fetching live prices for various trading pairs.

Update the "Lasted Price" column:
Modify the current table that contains trade history:

For each row in the "Trades by Market" table, use the ticker symbol (e.g., BTCUSDT, ETHUSDT) to fetch the real-time price from the Binance API.
Update the "Lasted Price" column with the fetched price for each trading pair.
Display in "Trades by Market" table:
Ensure that the updated "Lasted Price" is visible in the "Trades by Market" table within the project.

Save the updated table:
Once the prices have been updated, save the trade history with the updated "Lasted Price" values to a file (e.g., CSV) or the appropriate data storage system used in the project.

Error handling and testing:
Ensure that the system gracefully handles any errors, such as:

API request limits or timeouts.
Invalid ticker symbols.
After implementing the changes, test the integration by running the script and verifying that the prices in the "Lasted Price" column are updated correctly with real-time data from Binance and are properly displayed in the "Trades by Market" table.

Expected Outcome:
The "Lasted Price" column in the "Trades by Market" table should be populated with real-time cryptocurrency prices fetched from the Binance API. This will ensure that all trades have up-to-date market data and are displayed correctly in the specified table.